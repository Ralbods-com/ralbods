generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  uid String? @unique
  accounts      Account[]
  sessions      Session[]
  Diaries Diary[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}



model Diary {
  id          Int      @id @default(autoincrement())
  date        String
  title       String
  body        String?
  mind        Int
  createdAt   DateTime @default(now()) @map("created_at")
  publishedAt DateTime
  updatedAt   DateTime @updatedAt @map("updated_at")
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  tags        Tag[]
}

model Tag {
  id      Int    @id @default(autoincrement())
  name    String
  diaryId Int
  diary   Diary  @relation(fields: [diaryId], references: [id])
}
